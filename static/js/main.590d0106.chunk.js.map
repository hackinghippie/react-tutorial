{"version":3,"sources":["components/Header.js","components/BodyComponent.js","components/Paging.js","components/Body.js","App.js","index.js"],"names":["Header","id","BodyComponent","props","error","className","renderAllFacts","Paging","renderPageNumbers","state","apiPaging","slice","map","links","index","to","label","active","url","onClick","handleClick","currentPage","data","moveClick","randomize","lastPage","Body","isLoading","allFacts","localStorage","getItem","factsPerPage","newPageUrl","bind","window","history","pushState","this","length","setItem","setState","fetchApi","JSON","parse","prevProps","prevState","snapshot","match","params","fetch","then","response","ok","removeItem","Error","json","allFactsApi","last_page","stringify","Number","catch","err","message","event","scrollTo","top","behavior","target","parameter","movePage","fact","React","Component","createBrowserHistory","basename","process","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAWeA,MATf,WACI,OACI,sBAAKC,GAAG,SAAR,UACI,2CACA,4D,uCCQGC,MAZf,SAAwBC,GACpB,OACI,8BACI,sBAAKF,GAAG,kBAAR,cACKE,EAAMC,OAAS,qBAAKC,UAAU,WAAf,SAA2B,oBAAIA,UAAU,UAAd,SAC1CF,EAAMC,UACND,EAAMG,qB,OCsCRC,MA1Cf,SAAgBJ,GAEZ,IAGMK,EAHYL,EAAMM,MAAMC,UACIC,MAAM,GAAI,GAEFC,KAAI,SAACC,EAAOC,GAClD,OAAO,cAAC,IAAD,CAAkBC,GAAE,gBAAWF,EAAMG,OAArC,SACK,wBAAoBf,GAAIY,EAAMG,MAC9BX,WAAYQ,EAAMI,OAAS,YAAc,IAAM,KAAqB,OAAdJ,EAAMK,IAAe,aAAe,IAC1FC,QAAShB,EAAMiB,YAFf,SAGEP,EAAMG,OAHKF,IADPA,MAUtB,OACI,sBAAMb,GAAG,SAAT,UACI,qBAAKA,GAAK,YAAV,SACKO,IAEL,sBAAKP,GAAG,YAAR,UACI,cAAC,IAAD,CAAMc,GAAE,gBAAWZ,EAAMkB,YAAc,GAAvC,SACA,wBAAQpB,GAAG,WACXI,UAAiC,IAAtBF,EAAMkB,YAAoB,OAAS,IAC9CF,QAAW,kBAAMhB,EAAMmB,KAAKC,WAAW,IAFvC,SAE2C,yCAG3C,wBAAQtB,GAAG,YACXkB,QAAShB,EAAMmB,KAAKE,UADpB,SAC+B,kDAE/B,cAAC,IAAD,CAAMT,GAAE,gBAAWZ,EAAMkB,YAAc,GAAvC,SACA,wBAAQpB,GAAG,WACXI,UAAWF,EAAMsB,WAAatB,EAAMkB,YAAc,OAAS,IAC3DF,QAAW,kBAAKhB,EAAMmB,KAAKC,UAAU,IAFrC,SAEyC,gDC8I1CG,E,kDA/KX,aAAe,IAAD,8BACV,gBACKjB,MAAQ,CACTkB,WAAW,EACXC,SAAU,GACVP,YAAaQ,aAAaC,QAAQ,gBAAkB,EACpDC,aAAc,GACd3B,MAAO,KACPM,UAAW,GACXsB,WAAY,MAEhB,EAAKZ,YAAc,EAAKA,YAAYa,KAAjB,gBACnB,EAAKV,UAAY,EAAKA,UAAUU,KAAf,gBACjB,EAAKT,UAAY,EAAKA,UAAUS,KAAf,gBAbP,E,qDAiBd,WACI,IAAMZ,EAAcQ,aAAaC,QAAQ,eACzCI,OAAOC,QAAQC,UAAU,KAAM,GAAI,SAAYC,KAAK5B,MAAMY,aAE/B,IAAxBQ,aAAaS,QACZT,aAAaU,QAAQ,cAAe,GACpCF,KAAKG,SAAS,CACdnB,YAAc,IAGdgB,KAAKI,SAASpB,IAGdgB,KAAKG,SAAS,CACVb,WAAW,EACXC,SAAUc,KAAKC,MAAMd,aAAaC,QAAQ,cAAgB,GAC1DT,YAAaQ,aAAaC,QAAQ,gBAAkB,EACpDpB,UAAWgC,KAAKC,MAAMd,aAAaC,QAAQ,eAAiB,O,gCAMxE,SAAmBc,EAAWC,EAAWC,GACrC,GAAGF,GACIA,EAAUG,MAAMC,OAAO/C,KAAOoC,KAAKlC,MAAM4C,MAAMC,OAAO/C,GAAG,CACxD,IAAMA,EAAKoC,KAAKlC,MAAM4C,MAAMC,OAAO/C,GACnC4B,aAAaU,QAAQ,cAAetC,GACpCoC,KAAKG,SAAU,CACXnB,YAAapB,IAEjBoC,KAAKI,SAASxC,M,sBAM1B,SAASoB,GAAc,IAAD,OAIlB4B,MAHgB,6CACC5B,GAGZ6B,MAAK,SAAAC,GACF,IAAIA,EAASC,GAMT,MALAvB,aAAawB,WAAW,eACxBxB,aAAawB,WAAW,YACxB,EAAKb,SAAS,CACVZ,SAAW,KAET0B,MAAM,iDAEhB,OAAOH,EAASI,UAGnBL,MAAK,SAAAC,GACF,IAAMK,EAAcL,EAAS7B,KACvBG,EAAW0B,EAASM,UACpB/C,EAAYyC,EAAStC,MACvBQ,EAAcQ,aAAaC,QAAQ,eACvCD,aAAaU,QAAQ,WAAYG,KAAKgB,UAAUF,IAChD3B,aAAaU,QAAQ,YAAaG,KAAKgB,UAAUhD,IACjDmB,aAAaU,QAAQ,cAAeoB,OAAOtC,IAC3C,EAAKmB,SAAS,CACVb,WAAW,EACXC,SAAU4B,EACVnC,YAAaqB,KAAKC,MAAMd,aAAaC,QAAQ,iBAAmB,EAChE1B,MAAO,KACPqB,SAAUA,EACVf,UAAWA,OAGlBkD,OAAM,SAAAC,GACP,EAAKrB,SAAU,CACXpC,MAAOyD,EAAIC,QACXnC,WAAW,S,yBAMvB,SAAYoC,GAMR,GALA7B,OAAO8B,SAAS,CACZC,IAAK,EACLC,SAAU,WAGXH,EAAMI,OAAOlE,IAAM,EAAG,CACrB,IAAIoB,EAAcsC,OAAOI,EAAMI,OAAOlE,IACtC4B,aAAaU,QAAQ,cAAelB,GACpCgB,KAAKG,SAAU,CACXnB,YAAaqB,KAAKC,MAAMd,aAAaC,QAAQ,kBAEjDO,KAAKI,SAASpB,M,uBAKtB,SAAU+C,GACNlC,OAAO8B,SAAS,CACZC,IAAK,EACLC,SAAU,WAGd,IAAIG,EAAY3B,KAAKC,MAAMd,aAAaC,QAAQ,gBAAkBsC,EAC9D/C,EAAcgD,EAClBxC,aAAaU,QAAQ,cAAe8B,GACpChC,KAAKG,SAAU,CACXnB,YAAaQ,aAAaC,QAAQ,iBAEtCO,KAAKI,SAASpB,K,uBAIlB,WACIa,OAAO8B,SAAS,CACZC,IAAK,EACLC,SAAU,WAEdrC,aAAawB,WAAW,YACxBhB,KAAKI,a,oBAGT,WACI,MAA+CJ,KAAK5B,MAA7CmB,EAAP,EAAOA,SAAUP,EAAjB,EAAiBA,YAAaU,EAA9B,EAA8BA,aAGxBzB,EAAiB+B,KAAK5B,MAAMkB,UAClC,qBAAKtB,UAAU,WAAf,SACA,qBAAIA,UAAU,UAAd,yBAAoC,uBAApC,+CACSuB,EAAShB,KAAI,SAAC0D,EAAMxD,GACzB,OAAO,sBAAKT,UAAU,WAAf,UACP,oBAAGA,UAAU,WAAb,oBAAiCS,EAAM,GAAMO,EAAY,GAAKU,EAA9D,OACA,mBAAG1B,UAAU,WAAb,SAAyBiE,EAAKA,SAFQxD,MAM1C,OACI,gCACI,8BACI,cAAC,EAAD,CACAV,MAASiC,KAAK5B,MAAML,MACpBE,eAAkBA,MAGtB,8BACI,cAAC,EAAD,CACAgB,KAAQe,KACRhB,YAAegB,KAAK5B,MAAMY,YAC1BZ,MAAS4B,KAAK5B,MACdgB,SAAYY,KAAK5B,MAAMgB,SACvBL,YAAeiB,KAAKjB,uB,GAxKrBmD,IAAMC,W,eCsBFC,YAAqB,CAC1CC,SAAUC,oBADL,IAGQC,EAvBf,WAEE,OACE,gCACE,8BACE,cAAC,EAAD,MAEF,qBAAK3E,GAAG,iBAAR,SACA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4E,OAAK,EAACC,KAAK,IAAIC,UAAWrD,IACjC,cAAC,IAAD,CAAOoD,KAAK,YAAYC,UAAWrD,e,MCX7CsD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.590d0106.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction Header() {\r\n    return (\r\n        <div id=\"header\">\r\n            <h1>Cat Facts</h1>\r\n            <h2>Lucis - React Tutorial</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header; ","import React from \"react\"\r\n\r\nfunction BodyComponent (props) {\r\n    return(\r\n        <div>\r\n            <div id=\"facts-container\"> {/*output error or loading announcement*/}\r\n                {props.error && <div className=\"fact-div\" ><h3 className=\"loading\">\r\n                {props.error}</h3></div>}\r\n                {props.renderAllFacts}\r\n            </div>\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default BodyComponent","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\nfunction Paging(props) {\r\n\r\n    const apiPaging = props.state.apiPaging\r\n    const apiPagingSliced = apiPaging.slice(1, -1) //slice out previous and next page\r\n    \r\n    const renderPageNumbers = apiPagingSliced.map((links, index ) => {\r\n        return <Link key={index} to={`/page/${links.label}`}>\r\n                    <button key={index} id={links.label} \r\n                    className={(links.active ? \"mark-page\" : \"\") + \" \" + (links.url === null ? \"remove-btn\" : \"\")}\r\n                    onClick={props.handleClick}\r\n                    >{links.label}\r\n                    </button>\r\n                </Link>\r\n        }\r\n    )\r\n\r\n    return (\r\n        <div  id=\"paging\"> \r\n            <div id = \"page-nums\"> \r\n                {renderPageNumbers}\r\n            </div>\r\n            <div id=\"move-btns\">\r\n                <Link to={`/page/${props.currentPage - 1}`}>\r\n                <button id=\"back-btn\" \r\n                className={props.currentPage === 1 ? \"hide\" : \" \"} \r\n                onClick = {() => props.data.moveClick(-1)}><p>Back</p>\r\n                </button>\r\n                </Link>\r\n                <button id=\"randomize\" \r\n                onClick={props.data.randomize}><p>Randomize Facts</p>\r\n                </button>\r\n                <Link to={`/page/${props.currentPage + 1}`}>\r\n                <button id=\"next-btn\"\r\n                className={props.lastPage === props.currentPage ? \"hide\" : \" \" }\r\n                onClick = {()=> props.data.moveClick(1)}><p>Next</p>\r\n                </button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paging; \r\n","import React from \"react\"\r\nimport BodyComponent from \"./BodyComponent\"\r\nimport Paging from \"./Paging\"\r\n\r\nclass Body extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            isLoading: true,\r\n            allFacts: [],\r\n            currentPage: localStorage.getItem(\"currentPage\") || 1,\r\n            factsPerPage: 15,\r\n            error: null,\r\n            apiPaging: [],\r\n            newPageUrl: null\r\n        }\r\n        this.handleClick = this.handleClick.bind(this)\r\n        this.moveClick = this.moveClick.bind(this)\r\n        this.randomize = this.randomize.bind(this)\r\n    }\r\n   \r\n    //Call to API, get facts, put them into local storage or keep previous facts if available.\r\n    componentDidMount() {\r\n        const currentPage = localStorage.getItem(\"currentPage\")\r\n        window.history.pushState(null, \"\", \"/page/\" + (this.state.currentPage))\r\n        \r\n        if(localStorage.length === 0) { //if first run or deleted\r\n            localStorage.setItem(\"currentPage\", 1)\r\n            this.setState({ \r\n            currentPage:  1,\r\n            })\r\n\r\n            this.fetchApi(currentPage)\r\n \r\n        } else {\r\n            this.setState({ \r\n                isLoading: false,\r\n                allFacts: JSON.parse(localStorage.getItem(\"allFacts\")) || [],\r\n                currentPage: localStorage.getItem(\"currentPage\") || 1,\r\n                apiPaging: JSON.parse(localStorage.getItem(\"apiPaging\")) || []\r\n            })  \r\n        }\r\n    }\r\n\r\n    //when page updates(back/foward) replace url with current page and fetch api\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n        if(prevProps){\r\n            if(prevProps.match.params.id !== this.props.match.params.id){\r\n                const id = this.props.match.params.id\r\n                localStorage.setItem(\"currentPage\", id)\r\n                this.setState ({\r\n                    currentPage: id\r\n                })\r\n                this.fetchApi(id)\r\n            }\r\n        }\r\n    }\r\n\r\n    //funct to fetch API\r\n    fetchApi(currentPage) {\r\n        const apiLink = \"https://catfact.ninja/facts?limit=15&page=\"\r\n        const apiQuery = currentPage\r\n        \r\n        fetch (apiLink + apiQuery)\r\n            .then(response => {\r\n                if(!response.ok){ //throwing errors if response is not ok\r\n                    localStorage.removeItem(\"currentPage\")\r\n                    localStorage.removeItem(\"allFacts\")\r\n                    this.setState({ \r\n                        allFacts:  [],\r\n                    }) \r\n                    throw Error(\"Oh no! There was an error fetching the facts.\")\r\n                }\r\n                return response.json()  \r\n            })\r\n            \r\n            .then(response => {\r\n                const allFactsApi = response.data\r\n                const lastPage = response.last_page\r\n                const apiPaging = response.links\r\n                let currentPage = localStorage.getItem(\"currentPage\")\r\n                localStorage.setItem(\"allFacts\", JSON.stringify(allFactsApi))\r\n                localStorage.setItem(\"apiPaging\", JSON.stringify(apiPaging))\r\n                localStorage.setItem(\"currentPage\", Number(currentPage))\r\n                this.setState({\r\n                    isLoading: false,\r\n                    allFacts: allFactsApi,\r\n                    currentPage: JSON.parse(localStorage.getItem(\"currentPage\")) || 1,\r\n                    error: null,\r\n                    lastPage: lastPage,\r\n                    apiPaging: apiPaging\r\n                }) \r\n            })     \r\n            .catch(err => { //catching errors\r\n            this.setState ({\r\n                error: err.message,\r\n                isLoading: false,\r\n            }) \r\n        })\r\n    }\r\n    \r\n    //button function - for numbered pages\r\n    handleClick(event) {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        })\r\n        \r\n        if(event.target.id >= 1) {\r\n            let currentPage = Number(event.target.id)\r\n            localStorage.setItem(\"currentPage\", currentPage)\r\n            this.setState ({\r\n                currentPage: JSON.parse(localStorage.getItem(\"currentPage\"))\r\n            })\r\n            this.fetchApi(currentPage)\r\n        }\r\n    }\r\n    \r\n    //button function - for back/next pages\r\n    moveClick(parameter) {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        })\r\n        \r\n        let movePage = (JSON.parse(localStorage.getItem(\"currentPage\")) + parameter)\r\n        let currentPage = movePage\r\n        localStorage.setItem(\"currentPage\", movePage)\r\n        this.setState ({\r\n            currentPage: localStorage.getItem(\"currentPage\")\r\n        })\r\n        this.fetchApi(currentPage)\r\n    } \r\n\r\n    //button function - cleans up local storage and reloads the page\r\n    randomize() { \r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        })\r\n        localStorage.removeItem(\"allFacts\")\r\n        this.fetchApi()  \r\n    }\r\n\r\n    render() {\r\n        const {allFacts, currentPage, factsPerPage } = this.state\r\n        \r\n        //shows loading text when fetching then displays facts\r\n        const renderAllFacts = this.state.isLoading ? \r\n        <div className=\"fact-div\">\r\n        <h3 className=\"loading\">Please wait.<br/> The cats are disclosing their secrets.</h3>\r\n        </div> : allFacts.map((fact, index) => { \r\n            return <div className=\"fact-div\" key={index}>\r\n            <p className=\"fact-num\">Fact # {(index+1) + (currentPage-1) * factsPerPage}:</p>\r\n            <p className=\"fact-txt\">{fact.fact}</p>\r\n            </div>\r\n        })\r\n\r\n        return(\r\n            <div>\r\n                <div>\r\n                    <BodyComponent\r\n                    error = {this.state.error}\r\n                    renderAllFacts = {renderAllFacts}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Paging \r\n                    data = {this}\r\n                    currentPage = {this.state.currentPage}\r\n                    state = {this.state}\r\n                    lastPage = {this.state.lastPage}\r\n                    handleClick = {this.handleClick}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Body\r\n","import React from \"react\"\r\nimport Header from \"./components/Header\"\r\nimport Body from \"./components/Body\"\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\"\r\nimport { createBrowserHistory } from \"history\"\r\n\r\nfunction App () {\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Header />\r\n      </div>\r\n      <div id=\"main-container\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Body} />\r\n          <Route path=\"/page/:id\" component={Body} />\r\n        </Switch>\r\n      </Router>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport const history = createBrowserHistory({\r\n  basename: process.env.PUBLIC_URL\r\n})\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './style.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}