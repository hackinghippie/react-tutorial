{"version":3,"sources":["components/Header.js","components/BodyComponent.js","components/Paging.js","components/Body.js","App.js","index.js"],"names":["Header","id","BodyComponent","props","error","className","renderAllFacts","Paging","apiPagingSliced","state","apiPaging","slice","console","log","renderPageNumbers","map","links","index","label","onClick","handleClick","active","url","currentPage","data","moveClick","randomize","lastPage","Body","isLoading","allFacts","localStorage","getItem","factsPerPage","newPageUrl","bind","this","setState","JSON","parse","length","fetchApi","fetch","then","response","ok","Error","json","allFactsApi","last_page","setItem","stringify","Number","catch","err","message","event","window","scrollTo","top","behavior","target","parameter","movePage","removeItem","fact","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78c7c700.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction Header() {\r\n    return (\r\n        <div id=\"header\">\r\n            <h1>Cat Facts</h1>\r\n            <h2>Lucis - React Tutorial</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header; ","import React from \"react\"\r\n\r\nfunction BodyComponent (props) {\r\n    return(\r\n        <div>\r\n            <div id=\"facts-container\"> {/*output error or loading announcement*/}\r\n                {props.error && <div className=\"fact-div\" ><h3 className=\"loading\">\r\n                {props.error}</h3></div>}\r\n                {props.renderAllFacts}\r\n            </div>\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default BodyComponent","import React from \"react\"\r\n//import {Link} from \"react-router-dom\"\r\n\r\nfunction Paging(props) {\r\n    const apiPaging = props.state.apiPaging\r\n    const apiPagingSliced = apiPaging.slice(1, -1) //slice out previous and next page\r\n    console.log(\"paging\")\r\n    \r\n    const renderPageNumbers = apiPagingSliced.map((links, index)  => {\r\n        return <button id={links.label} \r\n                    onClick={props.handleClick} \r\n                    className={(links.active ? \"mark-page\" : \"\") + \" \" + (links.url === null ? \"remove-btn\" : \"\")}\r\n                    >{links.label}\r\n                    </button>\r\n    }\r\n    )\r\n\r\n    return (\r\n        <div  id=\"paging\"> \r\n            <div id = \"page-nums\"> \r\n                {renderPageNumbers}\r\n            </div>\r\n            <div id=\"move-btns\">\r\n                <button id=\"back-btn\" \r\n                className={props.currentPage === 1 ? \"hide\" : \" \"} \r\n                onClick = {() => props.data.moveClick(-1)}><p>Back</p>\r\n                </button>\r\n                <button id=\"randomize\" \r\n                onClick={props.data.randomize}><p>Randomize Facts</p>\r\n                </button>\r\n                <button id=\"next-btn\"\r\n                className={props.lastPage === props.currentPage ? \"hide\" : \" \" }\r\n                onClick = {()=> props.data.moveClick(1)}><p>Next</p>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paging; ","import React from \"react\"\r\nimport BodyComponent from \"./BodyComponent\"\r\nimport Paging from \"./Paging\"\r\n\r\nclass Body extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            isLoading: true,\r\n            allFacts: [],\r\n            currentPage: localStorage.getItem(\"currentPage\") || 1,\r\n            factsPerPage: 15,\r\n            error: null,\r\n            apiPaging: [],\r\n            newPageUrl: null\r\n        }\r\n        this.handleClick = this.handleClick.bind(this)\r\n        this.moveClick = this.moveClick.bind(this)\r\n        this.randomize = this.randomize.bind(this)\r\n    }\r\n   \r\n    //Call to API, get facts, put them into local storage or keep previous facts if available.\r\n    componentDidMount() {\r\n        const currentPage = localStorage.getItem(\"currentPage\") || 1\r\n        this.setState({ \r\n            isLoading: false,\r\n            allFacts: JSON.parse(localStorage.getItem(\"allFacts\")) || [],\r\n            currentPage: localStorage.getItem(\"currentPage\") || 1,\r\n            apiPaging: JSON.parse(localStorage.getItem(\"apiPaging\")) || []\r\n        })\r\n        \r\n        if(localStorage.length === 0) { //if user manually deletes the local storage\r\n            \r\n            this.setState({ \r\n            allFacts:  [],\r\n            currentPage:  1,\r\n            apiPaging:  []\r\n            })\r\n        } \r\n        this.fetchApi(currentPage) \r\n    }\r\n    \r\n    //funct to fetch API\r\n    fetchApi(currentPage) { \r\n        const apiLink = \"https://catfact.ninja/facts?limit=15&page=\"\r\n        const apiQuery = currentPage\r\n        \r\n        fetch (apiLink + apiQuery)\r\n            .then(response => {\r\n                if(!response.ok){ //throwing errors if response is not ok\r\n                    throw Error(\"Oh no! There was an error fetching the facts.\")\r\n                }\r\n                return response.json()\r\n            })\r\n            \r\n            .then(response => {\r\n                const allFactsApi = response.data\r\n                const lastPage = response.last_page\r\n                const apiPaging = response.links\r\n                let currentPage = localStorage.getItem(\"currentPage\")\r\n                localStorage.setItem(\"allFacts\", JSON.stringify(allFactsApi))\r\n                localStorage.setItem(\"apiPaging\", JSON.stringify(apiPaging))\r\n                localStorage.setItem(\"currentPage\", Number(currentPage))\r\n\r\n                this.setState({\r\n                    isLoading: false,\r\n                    allFacts: allFactsApi,\r\n                    currentPage: JSON.parse(localStorage.getItem(\"currentPage\")) || 1,\r\n                    error: null,\r\n                    lastPage: lastPage,\r\n                    apiPaging: apiPaging\r\n                }) \r\n                })\r\n                    \r\n            .catch(err => { //catching errors\r\n            this.setState ({\r\n                error: err.message,\r\n                isLoading: false,\r\n            })\r\n        })\r\n    }\r\n    \r\n    //button function - for numbered pages\r\n    handleClick(event) {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        })\r\n\r\n        if(event.target.id >= 1) {\r\n            let currentPage = Number(event.target.id)\r\n            localStorage.setItem(\"currentPage\", currentPage)\r\n            this.setState ({\r\n                currentPage: JSON.parse(localStorage.getItem('currentPage'))\r\n        })\r\n        this.fetchApi(currentPage);\r\n        }\r\n    }\r\n    \r\n    //button function - for back/next pages\r\n    moveClick(parameter) {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        })\r\n\r\n        let movePage = (JSON.parse(localStorage.getItem(\"currentPage\")) + parameter)\r\n        localStorage.setItem(\"currentPage\", movePage)\r\n        this.setState ({\r\n            currentPage: localStorage.getItem(\"currentPage\")\r\n        })\r\n    } \r\n\r\n    //button function - cleans up local storage and reloads the page\r\n    randomize() { \r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        })\r\n\r\n        localStorage.removeItem(\"allFacts\")\r\n        this.fetchApi()  \r\n    }\r\n\r\n    render() {\r\n        const {allFacts, currentPage, factsPerPage } = this.state\r\n\r\n        //shows loading text when fetching then displays facts\r\n        const renderAllFacts = this.state.isLoading ? \r\n        <div className=\"fact-div\"><h3 className=\"loading\">Please wait.<br/> The cats are disclosing their secrets.</h3></div> :\r\n        allFacts.map((fact, index) => { \r\n            return <div className=\"fact-div\" key={index}>\r\n            <p className=\"fact-num\">Fact # {(index+1) + (currentPage-1) * factsPerPage}:</p>\r\n            <p className=\"fact-txt\">{fact.fact}</p>\r\n            </div>\r\n        })\r\n\r\n        return(\r\n            <div>\r\n                <div>\r\n                    <BodyComponent\r\n                    error = {this.state.error}\r\n                    renderAllFacts = {renderAllFacts}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Paging \r\n                    data = {this}\r\n                    currentPage = {this.state.currentPage}\r\n                    state = {this.state}\r\n                    lastPage = {this.state.lastPage}\r\n                    handleClick = {this.handleClick}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Body","import React from \"react\"\r\nimport Header from \"./components/Header\"\r\nimport Body from \"./components/Body\"\r\n//import {BrowserRouter as Router, Route, Switch} from \"react-router-dom\"\r\n\r\nfunction App () {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Header />\r\n      </div>\r\n      <div id=\"main-container\">\r\n        <Body/>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './style.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}