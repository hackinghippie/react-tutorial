{"version":3,"sources":["components/Header.js","components/BodyComponent.js","components/Paging.js","components/Body.js","App.js","index.js"],"names":["Header","id","BodyComponent","props","error","className","renderAllFacts","Paging","apiPagingSliced","state","apiPaging","slice","useParams","useHistory","console","log","renderPageNumbers","map","links","index","to","label","onClick","handleClick","active","url","currentPage","data","moveClick","randomize","lastPage","Body","isLoading","allFacts","localStorage","getItem","factsPerPage","newPageUrl","bind","length","window","history","pushState","this","setState","fetchApi","JSON","parse","fetch","then","response","ok","Error","json","allFactsApi","last_page","setItem","stringify","Number","catch","err","message","event","scrollTo","top","behavior","target","parameter","movePage","removeItem","fact","React","Component","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b628c92.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction Header() {\r\n    return (\r\n        <div id=\"header\">\r\n            <h1>Cat Facts</h1>\r\n            <h2>Lucis - React Tutorial</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header; ","import React from \"react\"\r\n\r\nfunction BodyComponent (props) {\r\n    return(\r\n        <div>\r\n            <div id=\"facts-container\"> {/*output error or loading announcement*/}\r\n                {props.error && <div className=\"fact-div\" ><h3 className=\"loading\">\r\n                {props.error}</h3></div>}\r\n                {props.renderAllFacts}\r\n            </div>\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default BodyComponent","import React from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\nimport { useParams, useHistory } from 'react-router-dom'\r\n\r\n\r\nconst Paging = (props) => {\r\n    const apiPaging = props.state.apiPaging\r\n    const apiPagingSliced = apiPaging.slice(1, -1) //slice out previous and next page\r\n    const { id } = useParams()\r\n    const history = useHistory()\r\n    console.log(\"id \" + id)\r\n\r\n\r\n    const renderPageNumbers = apiPagingSliced.map((links, index) => {\r\n        return <Link key={index} to={`/page/${links.label}`}>\r\n                <button key={index} id={links.label} \r\n                onClick={props.handleClick} \r\n                className={(links.active ? \"mark-page\" : \"\") + \" \" + (links.url === null ? \"remove-btn\" : \"\")}\r\n                >{links.label}\r\n                </button></Link>\r\n    }\r\n    )\r\n\r\n    return (\r\n        <div  id=\"paging\"> \r\n            <div id = \"page-nums\"> \r\n                {renderPageNumbers}\r\n            </div>\r\n            <div>\r\n        </div>\r\n            <div id=\"move-btns\">\r\n                <Link to={`/page/${props.currentPage - 1}`}>\r\n                <button id=\"back-btn\" \r\n                className={props.currentPage === 1 ? \"hide\" : \" \"} \r\n                onClick = {() => props.data.moveClick(-1)}><p>Back</p>\r\n                </button>\r\n                </Link>\r\n                <button id=\"randomize\" \r\n                onClick={props.data.randomize}><p>Randomize Facts</p>\r\n                </button>\r\n                <Link to={`/page/${props.currentPage + 1}`}>\r\n                <button id=\"next-btn\"\r\n                className={props.lastPage === props.currentPage ? \"hide\" : \" \" }\r\n                onClick = {()=> props.data.moveClick(1)}><p>Next</p>\r\n                </button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paging; ","import React from \"react\"\r\nimport BodyComponent from \"./BodyComponent\"\r\nimport Paging from \"./Paging\"\r\n\r\nclass Body extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            isLoading: true,\r\n            allFacts: [],\r\n            currentPage: localStorage.getItem(\"currentPage\") || 1,\r\n            factsPerPage: 15,\r\n            error: null,\r\n            apiPaging: [],\r\n            newPageUrl: null\r\n        }\r\n        this.handleClick = this.handleClick.bind(this)\r\n        this.moveClick = this.moveClick.bind(this)\r\n        this.randomize = this.randomize.bind(this)\r\n    }\r\n   \r\n    //Call to API, get facts, put them into local storage or keep previous facts if available.\r\n    componentDidMount() {\r\n\r\n        const currentPage = localStorage.getItem(\"currentPage\") || 1\r\n        //const item = sessionStorage.getItem('pageHasBeenLoaded');\r\n\r\n        if(localStorage.length === 0) { //if user manually deletes the local storage. go to /page/1, and fetch api again\r\n            window.history.pushState(null, '', '/page/1'); \r\n            \r\n            this.setState({ \r\n            allFacts:  [],\r\n            currentPage:  1,\r\n            apiPaging:  []\r\n            })\r\n\r\n            this.fetchApi(currentPage) \r\n\r\n        /*} else if (item) { // if page is reloaded, keep same facts and page number\r\n        \r\n            console.log(\"reloaded\")\r\n            this.setState({ \r\n                isLoading: false,\r\n                allFacts: JSON.parse(localStorage.getItem(\"allFacts\")),\r\n                currentPage: localStorage.getItem(\"currentPage\"),\r\n                apiPaging: JSON.parse(localStorage.getItem(\"apiPaging\"))\r\n            })*/\r\n            \r\n\r\n        } else {\r\n        \r\n        this.setState({ \r\n            isLoading: false,\r\n            allFacts: JSON.parse(localStorage.getItem(\"allFacts\")) || [],\r\n            currentPage: localStorage.getItem(\"currentPage\") || 1,\r\n            apiPaging: JSON.parse(localStorage.getItem(\"apiPaging\")) || []\r\n        })\r\n\r\n        this.fetchApi(currentPage) \r\n    }\r\n    }\r\n    //funct to fetch API\r\n    fetchApi(currentPage) { \r\n        const apiLink = \"https://catfact.ninja/facts?limit=15&page=\"\r\n        const apiQuery = currentPage\r\n        \r\n        fetch (apiLink + apiQuery)\r\n            .then(response => {\r\n                if(!response.ok){ //throwing errors if response is not ok\r\n                    throw Error(\"Oh no! There was an error fetching the facts.\")\r\n                }\r\n                return response.json()\r\n            })\r\n            \r\n            .then(response => {\r\n                const allFactsApi = response.data\r\n                const lastPage = response.last_page\r\n                const apiPaging = response.links\r\n                let currentPage = localStorage.getItem(\"currentPage\")\r\n                localStorage.setItem(\"allFacts\", JSON.stringify(allFactsApi))\r\n                localStorage.setItem(\"apiPaging\", JSON.stringify(apiPaging))\r\n                localStorage.setItem(\"currentPage\", Number(currentPage))\r\n\r\n                this.setState({\r\n                    isLoading: false,\r\n                    allFacts: allFactsApi,\r\n                    currentPage: JSON.parse(localStorage.getItem(\"currentPage\")) || 1,\r\n                    error: null,\r\n                    lastPage: lastPage,\r\n                    apiPaging: apiPaging\r\n                }) \r\n                })\r\n                    \r\n            .catch(err => { //catching errors\r\n            this.setState ({\r\n                error: err.message,\r\n                isLoading: false,\r\n            })\r\n        })\r\n    }\r\n    \r\n    //button function - for numbered pages\r\n    handleClick(event) {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        })\r\n\r\n        if(event.target.id >= 1) {\r\n            let currentPage = Number(event.target.id)\r\n            localStorage.setItem(\"currentPage\", currentPage)\r\n            this.setState ({\r\n                currentPage: JSON.parse(localStorage.getItem('currentPage'))\r\n        })\r\n        this.fetchApi(currentPage);\r\n        }\r\n    }\r\n    \r\n    //button function - for back/next pages\r\n    moveClick(parameter) {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        })\r\n\r\n        let movePage = (JSON.parse(localStorage.getItem(\"currentPage\")) + parameter)\r\n        let currentPage = movePage\r\n        localStorage.setItem(\"currentPage\", movePage)\r\n        this.setState ({\r\n            currentPage: localStorage.getItem(\"currentPage\")\r\n        })\r\n        this.fetchApi(currentPage)\r\n    } \r\n\r\n    //button function - cleans up local storage and reloads the page\r\n    randomize() { \r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        })\r\n\r\n        localStorage.removeItem(\"allFacts\")\r\n        this.fetchApi()  \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const {allFacts, currentPage, factsPerPage } = this.state\r\n\r\n        //shows loading text when fetching then displays facts\r\n        const renderAllFacts = this.state.isLoading ? \r\n        <div className=\"fact-div\"><h3 className=\"loading\">Please wait.<br/> The cats are disclosing their secrets.</h3></div> :\r\n        allFacts.map((fact, index) => { \r\n            return <div className=\"fact-div\" key={index}>\r\n            <p className=\"fact-num\">Fact # {(index+1) + (currentPage-1) * factsPerPage}:</p>\r\n            <p className=\"fact-txt\">{fact.fact}</p>\r\n            </div>\r\n        })\r\n        \r\n\r\n        return(\r\n            <div>\r\n                <div>\r\n                    <BodyComponent\r\n                    error = {this.state.error}\r\n                    renderAllFacts = {renderAllFacts}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Paging \r\n                    data = {this}\r\n                    currentPage = {this.state.currentPage}\r\n                    state = {this.state}\r\n                    lastPage = {this.state.lastPage}\r\n                    handleClick = {this.handleClick}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Body","import React from \"react\"\r\nimport Header from \"./components/Header\"\r\nimport Body from \"./components/Body\"\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\"\r\n\r\nfunction App () {\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Header />\r\n      </div>\r\n      <div id=\"main-container\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Body} />\r\n          <Route path=\"/page/:id\" component={Body} />\r\n        </Switch>\r\n      </Router>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './style.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}