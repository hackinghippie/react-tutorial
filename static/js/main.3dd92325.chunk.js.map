{"version":3,"sources":["components/Header.js","components/BodyComponent.js","components/Paging.js","components/Body.js","App.js","index.js"],"names":["Header","id","BodyComponent","props","error","className","renderAllFacts","Paging","renderPageNumbers","state","apiPaging","slice","map","links","index","label","url","onClick","handleClick","active","currentPage","data","moveClick","randomize","lastPage","Body","isLoading","allFacts","localStorage","getItem","factsPerPage","newPageUrl","bind","this","setState","JSON","parse","length","window","location","href","fetchApi","apiQuery","fetch","then","response","ok","Error","json","allFactsApi","last_page","setItem","stringify","Number","catch","err","message","event","scrollTo","top","behavior","target","parameter","movePage","removeItem","fact","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3dd92325.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction Header() {\r\n    return (\r\n        <div id=\"header\">\r\n            <h1>Cat Facts</h1>\r\n            <h2>Lucis - React Tutorial</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header; ","import React from \"react\"\r\n\r\nfunction BodyComponent (props) {\r\n    return(\r\n        <div>\r\n            <div id=\"facts-container\"> {/*output error or loading announcement*/}\r\n                {props.error && <div id=\"loading\" ><h3 className=\"fact-div\">\r\n                {props.error}</h3></div>}\r\n                {props.renderAllFacts}\r\n            </div>\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default BodyComponent","import React from \"react\"\r\n\r\nfunction Paging(props) {\r\n    const apiPaging = props.state.apiPaging\r\n    const apiPagingSliced = apiPaging.slice(1, -1) //slice out previous and next page\r\n    \r\n    const renderPageNumbers = apiPagingSliced.map((links, index) => {\r\n        return <button key={index} id={links.label} \r\n                url={links.url}\r\n                onClick={(index)=>props.handleClick(index)} \r\n                className={(links.active ? \"mark-page\" : \"\") + \" \" + (links.url === null ? \"remove-btn\" : \"\")}\r\n                >{links.label}\r\n                </button>  \r\n        })\r\n\r\n    return (\r\n        <div  id=\"paging\"> \r\n            <div id = \"page-nums\"> \r\n                {renderPageNumbers}\r\n            </div>\r\n            <div id=\"move-btns\">\r\n                <button id=\"back-btn\" \r\n                className={props.currentPage === 1 ? \"hide\" : \" \"} \r\n                onClick = {() => props.data.moveClick(-1)}><p>Back</p>\r\n                </button>\r\n                <button id=\"randomize\" \r\n                onClick={props.data.randomize}><p>Randomize Facts</p>\r\n                </button>\r\n                <button id=\"next-btn\"\r\n                className={props.lastPage === props.currentPage ? \"hide\" : \" \" }\r\n                onClick = {()=> props.data.moveClick(1)}><p>Next</p>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paging; ","import React from \"react\"\r\nimport BodyComponent from \"./BodyComponent\"\r\nimport Paging from \"./Paging\"\r\n\r\nclass Body extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            isLoading: true,\r\n            allFacts: [],\r\n            currentPage: localStorage.getItem(\"currentPage\") || 1,\r\n            factsPerPage: 15,\r\n            error: null,\r\n            apiPaging: [],\r\n            newPageUrl: null\r\n        }\r\n        this.handleClick = this.handleClick.bind(this)\r\n        this.moveClick = this.moveClick.bind(this)\r\n        this.randomize = this.randomize.bind(this)\r\n    }\r\n   \r\n    //Call to API, get facts, put them into local storage or keep previous facts if available.\r\n    componentDidMount() {\r\n\r\n            this.setState({ \r\n                isLoading: false,\r\n                allFacts: JSON.parse(localStorage.getItem(\"allFacts\")) || [],\r\n                currentPage: localStorage.getItem(\"currentPage\") || 1,\r\n                apiPaging: JSON.parse(localStorage.getItem(\"apiPaging\")) || []\r\n            })\r\n            \r\n            if(localStorage.length === 0) { //if user manually deletes the local storage\r\n                window.location.href = ''\r\n\r\n            }  //gets new facts from API if they don't already exist \r\n            \r\n            this.fetchApi() \r\n    }\r\n    \r\n    //funct to fetch API\r\n    fetchApi() { \r\n        //const pageName = window.location.pathname\r\n        //const apiQuery = pageName.replace(\"/Page=\", \"\")\r\n        const apiPaging = \"https://catfact.ninja/facts?limit=15&page=\"\r\n        const apiQuery = JSON.parse(this.state.currentPage)\r\n        //console.log(apiPaging + apiQuery)\r\n        \r\n        fetch (apiPaging + apiQuery)\r\n        .then(response => {\r\n        if(!response.ok){ //throwing errors if response is not ok\r\n            throw Error(\"Oh no! There was an error fetching the facts.\") \r\n        }\r\n        return response.json()\r\n        })\r\n        \r\n        .then(response => {\r\n            const allFactsApi = response.data\r\n            const lastPage = response.last_page\r\n            const apiPaging = response.links\r\n            let currentPage = localStorage.getItem(\"currentPage\") || 1\r\n            localStorage.setItem(\"allFacts\", JSON.stringify(allFactsApi))\r\n            localStorage.setItem(\"apiPaging\", JSON.stringify(apiPaging))\r\n            localStorage.setItem(\"currentPage\", Number(currentPage))\r\n\r\n                this.setState({ \r\n                    isLoading: false,\r\n                    allFacts: allFactsApi,\r\n                    currentPage: JSON.parse(localStorage.getItem(\"currentPage\")) || 1,\r\n                    error: null,\r\n                    lastPage: lastPage,\r\n                    apiPaging: apiPaging\r\n                }) \r\n                })\r\n                \r\n        .catch(err => { //catching errors\r\n        this.setState ({\r\n            error: err.message,\r\n            isLoading: false,\r\n        })\r\n        })\r\n    }\r\n    \r\n\r\n    //button function - for numbered pages\r\n    handleClick(event) {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        })\r\n        \r\n        if(event.target.id >= 1) {\r\n        \r\n        let currentPage = Number(event.target.id)\r\n        localStorage.setItem(\"currentPage\", currentPage)\r\n        this.setState ({\r\n            currentPage: JSON.parse(localStorage.getItem(\"currentPage\"))\r\n        })\r\n\r\n        this.fetchApi() \r\n       }\r\n        \r\n        \r\n    }\r\n    //button function - for back/next pages\r\n    moveClick(parameter) {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        })\r\n\r\n        let movePage = (JSON.parse(localStorage.getItem(\"currentPage\")) + parameter)\r\n        localStorage.setItem(\"currentPage\", movePage)\r\n        this.setState ({\r\n            currentPage: localStorage.getItem(\"currentPage\")\r\n        })\r\n    } \r\n\r\n    //button function - cleans up local storage and reloads the page\r\n    randomize() { \r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        })\r\n\r\n        localStorage.removeItem(\"allFacts\")\r\n        this.fetchApi()  \r\n    }\r\n\r\n    render() {\r\n        const {allFacts, currentPage, factsPerPage } = this.state\r\n\r\n        //shows text when fetching then display facts\r\n        const renderAllFacts = this.state.isLoading ? \r\n        <div className =\"fact-div\"><h3 className=\"loading\">Please wait.<br/> The cats are disclosing their secrets.</h3></div> :\r\n        allFacts.map((fact, index) => { \r\n            return <div className=\"fact-div\" key={index}>\r\n            <p className=\"fact-num\">Fact # {(index+1) + (currentPage-1) * factsPerPage}:</p>\r\n            <p className=\"fact-txt\">{fact.fact}</p>\r\n            </div>\r\n        })\r\n\r\n        return(\r\n            <div>\r\n                <div>\r\n                    <BodyComponent\r\n                    error = {this.state.error}\r\n                    renderAllFacts = {renderAllFacts}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Paging \r\n                    data = {this}\r\n                    currentPage = {this.state.currentPage}\r\n                    state = {this.state}\r\n                    lastPage = {this.state.lastPage}\r\n                    handleClick = {this.handleClick}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Body","import React from \"react\"\nimport Header from \"./components/Header\"\nimport Body from \"./components/Body\"\n//import {BrowserRouter as Router, Route, Switch} from \"react-router-dom\"\n\nfunction App () {\n  return (\n    <div>\n      <div>\n        <Header />\n      </div>\n      <div  id=\"main-container\">\n        <Body/>\n      </div>\n    </div>\n  )\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './style.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}