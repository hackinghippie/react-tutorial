{"version":3,"sources":["components/Header.js","components/BodyComponent.js","components/Paging.js","components/Body.js","App.js","index.js"],"names":["Header","id","BodyComponent","props","error","className","renderAllFacts","Paging","renderPageNumbers","currentPage","onClick","data","moveClick","randomize","lastPage","Body","state","isLoading","allFacts","factsPerPage","handleClick","bind","localStorage","getItem","this","setState","JSON","parse","fetch","then","response","ok","Error","json","allFactsApi","setItem","stringify","catch","err","message","event","window","scrollTo","top","behavior","Number","target","parameter","movePage","removeItem","location","reload","indexOfLastFact","indexOfFirstFact","allFactsSliced","slice","map","fact","index","pageNumbers","i","Math","ceil","length","push","number","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mKAWeA,MATf,WACI,OACI,sBAAKC,GAAG,SAAR,UACI,2CACA,4D,mCCQGC,MAZf,SAAwBC,GACpB,OACI,8BACI,sBAAKF,GAAG,kBAAR,cACKE,EAAMC,OAAS,qBAAKH,GAAG,UAAR,SAAmB,oBAAII,UAAU,WAAd,SAClCF,EAAMC,UACND,EAAMG,qBCkBRC,MAxBf,SAAgBJ,GAEZ,OACI,sBAAMF,GAAG,SAAT,UACI,qBAAKA,GAAK,YAAV,SACKE,EAAMK,oBAEX,sBAAKP,GAAG,YAAR,UACI,wBAAQA,GAAG,WACXI,UAAiC,IAAtBF,EAAMM,YAAoB,OAAS,GAC9CC,QAAW,kBAAMP,EAAMQ,KAAKC,WAAW,IAFvC,SAE2C,uCAE3C,wBAAQX,GAAG,YACXS,QAASP,EAAMQ,KAAKE,UADpB,SAC+B,kDAE/B,wBAAQZ,GAAG,WACXI,UAAWF,EAAMW,WAAaX,EAAMM,YAAc,OAAS,OAC3DC,QAAW,kBAAKP,EAAMQ,KAAKC,UAAU,IAFrC,SAEyC,8CC4H1CG,E,kDA1IX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,WAAW,EACXC,SAAU,GACVT,YAAa,KACbU,aAAc,GACdf,MAAO,MAEX,EAAKgB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKT,UAAY,EAAKA,UAAUS,KAAf,gBACjB,EAAKR,UAAY,EAAKA,UAAUQ,KAAf,gBAXP,E,qDAed,WAAqB,IAAD,OACuB,OAApCC,aAAaC,QAAQ,YACpBC,KAAKC,SAAS,CACVR,WAAW,EACXC,SAAUQ,KAAKC,MAAML,aAAaC,QAAQ,aAC1Cd,YAAaa,aAAaC,QAAQ,iBAG1CK,MAAM,0CACLC,MAAK,SAAAC,GACF,IAAIA,EAASC,GACT,MAAMC,MAAM,iDAEhB,OAAOF,EAASG,UAEnBJ,MAAK,SAAAC,GACF,IAAMI,EAAcJ,EAASnB,KAEzB,EAAKc,SAAS,CACVR,WAAW,EACXC,SAAUgB,EACVzB,YAAa,EACbL,MAAO,OAEXkB,aAAaa,QAAQ,WAAYT,KAAKU,UAAUF,IAChDZ,aAAaa,QAAQ,cAAeT,KAAKU,UAR3B,OAUrBC,OAAM,SAAAC,GACP,EAAKb,SAAU,CACXrB,MAAOkC,EAAIC,QACXtB,WAAW,S,yBAOnB,SAAYuB,GACRC,OAAOC,SAAS,CACZC,IAAK,EACLC,SAAU,WAGdpB,KAAKC,SAAU,CACXhB,YAAaa,aAAaC,QAAQ,iBAEtC,IAAId,EAAcoC,OAAOL,EAAMM,OAAO7C,IACtCqB,aAAaa,QAAQ,cAAeT,KAAKU,UAAU3B,IACnDe,KAAKC,SAAU,CAAChB,YAAaA,M,uBAGjC,SAAUsC,GACNN,OAAOC,SAAS,CACZC,IAAK,EACLC,SAAU,WAGdpB,KAAKC,SAAU,CACXhB,YAAaiB,KAAKC,MAAML,aAAaC,QAAQ,kBAEjD,IAAIyB,EAAYxB,KAAKR,MAAMP,YAAcsC,EACzCzB,aAAaa,QAAQ,cAAeT,KAAKU,UAAUY,IACnDxB,KAAKC,SAAU,CACXhB,YAAauC,M,uBAIrB,WACI1B,aAAa2B,WAAW,YACxB3B,aAAa2B,WAAW,eACxBR,OAAOS,SAASC,W,oBAGpB,WAgBI,IAhBM,IAAD,OACL,EAA+C3B,KAAKR,MAA7CE,EAAP,EAAOA,SAAUT,EAAjB,EAAiBA,YAAaU,EAA9B,EAA8BA,aACxBiC,EAAkB3C,EAAcU,EAChCkC,EAAmBD,EAAkBjC,EACrCmC,EAAiBpC,EAASqC,MAAMF,EAAkBD,GAElD9C,EAAiBkB,KAAKR,MAAMC,UAClC,qBAAKhB,GAAG,UAAR,SAAkB,qBAAII,UAAU,WAAd,yBAAsC,uBAAtC,+CAClBiD,EAAeE,KAAI,SAACC,EAAMC,GACtB,OAAO,sBAAKrD,UAAU,WAAf,UACP,oBAAGA,UAAU,WAAb,oBAAiCqD,EAAM,GAAMjD,EAAY,GAAKU,EAA9D,OACA,mBAAGd,UAAU,WAAb,SAAyBoD,EAAKA,SAFQC,MAMpCC,EAAc,GACXC,EAAI,EAAGA,GAAKC,KAAKC,KAAK5C,EAAS6C,OAAS5C,GAAeyC,IAC5DD,EAAYK,KAAKJ,GAErB,IAAM9C,EAAW6C,EAAYI,OAEvBvD,EAAoBmD,EAAYH,KAAI,SAAAS,GACtC,OACI,wBAAqBhE,GAAIgE,EAAQvD,QAAS,EAAKU,YAAaf,UAAWI,IAAcwD,EAAS,YAAc,GAA5G,SAAmHA,GAAtGA,MAIrB,OACI,gCACI,8BACI,cAAC,EAAD,CACA7D,MAASoB,KAAKR,MAAMZ,MACpBE,eAAkBA,MAGtB,8BACI,cAAC,EAAD,CACAK,KAAQa,KACRf,YAAee,KAAKR,MAAMP,YAC1BK,SAAYA,EACZN,kBAAqBA,a,GAjItB0D,IAAMC,WCcVC,MAdf,WACE,OACE,gCACE,8BACE,cAAC,EAAD,MAEF,qBAAMnE,GAAG,iBAAT,SACE,cAAC,EAAD,UCNRoE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0d13a33a.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction Header() {\r\n    return (\r\n        <div id=\"header\">\r\n            <h1>Cat Facts</h1>\r\n            <h2>Lucis - React Tutorial</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header; ","import React from \"react\"\r\n\r\nfunction BodyComponent (props) {\r\n    return(\r\n        <div>\r\n            <div id=\"facts-container\"> {/*output error or loading announcement*/}\r\n                {props.error && <div id=\"loading\" ><h3 className=\"fact-div\">\r\n                {props.error}</h3></div>}\r\n                {props.renderAllFacts}\r\n            </div>\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default BodyComponent","import React from \"react\"\r\n\r\nfunction Paging(props) {\r\n\r\n    return (\r\n        <div  id=\"paging\">\r\n            <div id = \"page-nums\">\r\n                {props.renderPageNumbers}\r\n            </div>\r\n            <div id=\"move-btns\">\r\n                <button id=\"back-btn\" \r\n                className={props.currentPage === 1 ? \"hide\" : \"\"} \r\n                onClick = {() => props.data.moveClick(-1)}><p>Back</p>\r\n                </button>\r\n                <button id=\"randomize\" \r\n                onClick={props.data.randomize}><p>Randomize Facts</p>\r\n                </button>\r\n                <button id=\"next-btn\"\r\n                className={props.lastPage === props.currentPage ? \"hide\" : \"show\"}\r\n                onClick = {()=> props.data.moveClick(1)}><p>Next</p>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paging; ","import React from \"react\"\r\nimport BodyComponent from \"./BodyComponent\"\r\nimport Paging from \"./Paging\"\r\n\r\nclass Body extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            isLoading: true,\r\n            allFacts: [],\r\n            currentPage: null,\r\n            factsPerPage: 15,\r\n            error: null,\r\n        }\r\n        this.handleClick = this.handleClick.bind(this)\r\n        this.moveClick = this.moveClick.bind(this)\r\n        this.randomize = this.randomize.bind(this)\r\n    }\r\n   \r\n    //Call to API, get facts, put them into local storage or keep previous facts if available.\r\n    componentDidMount() {\r\n        if(localStorage.getItem(\"allFacts\")!== null){ //checks if facts already exist\r\n            this.setState({ \r\n                isLoading: false,\r\n                allFacts: JSON.parse(localStorage.getItem(\"allFacts\")),\r\n                currentPage: localStorage.getItem(\"currentPage\")\r\n                })\r\n        } else {  //gets new facts from API if they don't already exist\r\n        fetch(\"https://catfact.ninja/facts?limit=1000\")\r\n        .then(response => {\r\n            if(!response.ok){ //throwing errors if response is not ok\r\n                throw Error(\"Oh no! There was an error fetching the facts.\") \r\n            }\r\n            return response.json()\r\n        })\r\n        .then(response => {\r\n            const allFactsApi = response.data\r\n            let currentPage = 1\r\n                this.setState({ \r\n                    isLoading: false,\r\n                    allFacts: allFactsApi,\r\n                    currentPage: 1,\r\n                    error: null\r\n                })\r\n                localStorage.setItem(\"allFacts\", JSON.stringify(allFactsApi))\r\n                localStorage.setItem(\"currentPage\", JSON.stringify(currentPage))\r\n                })\r\n        .catch(err => { //catching errors\r\n        this.setState ({\r\n            error: err.message,\r\n            isLoading: false,\r\n        })\r\n        })\r\n        }\r\n        \r\n    }\r\n    //button events - for numbered pages\r\n    handleClick(event) {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        })\r\n\r\n        this.setState ({\r\n            currentPage: localStorage.getItem(\"currentPage\")\r\n        })\r\n        let currentPage = Number(event.target.id)\r\n        localStorage.setItem(\"currentPage\", JSON.stringify(currentPage))\r\n        this.setState ({currentPage: currentPage})\r\n    }\r\n    //button events - for back/next pages\r\n    moveClick(parameter) {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        })\r\n\r\n        this.setState ({\r\n            currentPage: JSON.parse(localStorage.getItem(\"currentPage\"))\r\n        })     \r\n        let movePage = (this.state.currentPage + parameter)\r\n        localStorage.setItem(\"currentPage\", JSON.stringify(movePage))\r\n        this.setState ({\r\n            currentPage: movePage\r\n        })\r\n    } \r\n\r\n    randomize() { //cleans up local storage and reloads the page\r\n        localStorage.removeItem(\"allFacts\")\r\n        localStorage.removeItem(\"currentPage\")\r\n        window.location.reload();\r\n    }\r\n\r\n    render() {\r\n        const {allFacts, currentPage, factsPerPage } = this.state\r\n        const indexOfLastFact = currentPage * factsPerPage\r\n        const indexOfFirstFact = indexOfLastFact - factsPerPage\r\n        const allFactsSliced = allFacts.slice(indexOfFirstFact, indexOfLastFact)\r\n\r\n        const renderAllFacts = this.state.isLoading ? \r\n        <div id=\"loading\"><h3 className=\"fact-div\" >Please wait.<br/> The cats are disclosing their secrets.</h3></div> :\r\n        allFactsSliced.map((fact, index) => { \r\n            return <div className=\"fact-div\" key={index}>\r\n            <p className=\"fact-num\">Fact # {(index+1) + (currentPage-1) * factsPerPage}:</p>\r\n            <p className=\"fact-txt\">{fact.fact}</p>\r\n            </div>\r\n        })\r\n\r\n        const pageNumbers = []\r\n        for (let i = 1; i <= Math.ceil(allFacts.length / factsPerPage); i++) {\r\n            pageNumbers.push(i)\r\n        }\r\n        const lastPage = pageNumbers.length\r\n        \r\n        const renderPageNumbers = pageNumbers.map(number => {\r\n            return (\r\n                <button key={number} id={number} onClick={this.handleClick} className={currentPage===number ? \"mark-page\" : \"\" } >{number}</button>\r\n            )\r\n        })\r\n        \r\n        return(\r\n            <div>\r\n                <div>\r\n                    <BodyComponent\r\n                    error = {this.state.error}\r\n                    renderAllFacts = {renderAllFacts}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Paging \r\n                    data = {this}\r\n                    currentPage = {this.state.currentPage}\r\n                    lastPage = {lastPage}\r\n                    renderPageNumbers = {renderPageNumbers}\r\n                    />\r\n                </div>\r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Body","import React from \"react\"\nimport Header from \"./components/Header\"\nimport Body from \"./components/Body\"\n\nfunction App () {\n  return (\n    <div>\n      <div>\n        <Header />\n      </div>\n      <div  id=\"main-container\">\n        <Body />\n      </div>\n    </div>\n  )\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}